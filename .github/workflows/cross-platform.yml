name: Cross Platform Build

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: jing
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: jing.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: jing
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: jing
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Run tests (native only)
      run: cargo test --target ${{ matrix.target }}
      if: matrix.target == 'x86_64-unknown-linux-gnu' || matrix.target == 'x86_64-pc-windows-msvc' || (matrix.target == 'x86_64-apple-darwin' && runner.arch == 'X64') || (matrix.target == 'aarch64-apple-darwin' && runner.arch == 'ARM64')
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jing-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}
        retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          jing-x86_64-unknown-linux-gnu/jing
          jing-x86_64-pc-windows-msvc/jing.exe
          jing-x86_64-apple-darwin/jing
          jing-aarch64-apple-darwin/jing
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
